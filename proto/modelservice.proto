syntax = "proto3";

option go_package = "dist_final_project/proto";
package modelservice;

// Definition of ModelService
service ModelService {
    rpc GetModel (GetModelRequest) returns (stream GetModelReply) {}
    rpc GetPeerList (GetPeerListRequest) returns (GetPeerListResponse) {}
    rpc CollectModel (CollectModelRequest) returns (CollectModelResponse) {}
}

message CollectModelRequest {
    string key = 1;
    uint32 num = 2;
}

message CollectModelResponse {
    bool success = 1;
}

message GetModelRequest {
    uint32 port = 1;
}

message GetModelReply {
    bytes chunk = 1;
}

message GetPeerListRequest {
    uint32 port = 1;
}

message GetPeerListResponse {
    map<string, Peer> peers = 1;
}

message Peer {
    string ip = 1;
    uint32 port = 2;
}

/*
protoc --go_out=. --go_opt=paths=source_relative \\n    
--go-grpc_out=. --go-grpc_opt=paths=source_relative \\n    helloworld/helloworld.proto
*/